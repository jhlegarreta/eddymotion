name: Unit and integration tests

on:
  push:
    branches:
      - main
      - maint/*
  pull_request:
    branches:
      - main
      - maint/*
  # Allow job to be triggered manually from GitHub interface
  workflow_dispatch:

defaults:
  run:
    shell: bash

# Force tox and pytest to use color
env:
  FORCE_COLOR: true
  TEST_DATA_HOME: /home/runner/eddymotion-tests/
  ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 4

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v1.9.0
        with:
          environment-file: env.yml
          init-shell: bash
          cache-environment: true
          cache-environment-key: environment-v1
          cache-downloads: false
          post-cleanup: 'none'
          generate-run-shell: true
          # https://github.com/mamba-org/setup-micromamba/issues/225
          micromamba-version: 1.5.10-0
          micromamba-binary-path: /home/runner/micromamba-bin-versioned/micromamba

      - uses: actions/cache/restore@v4
        with:
          path: /home/runner/eddymotion-tests/
          key: data-v0

      - name: Get test data with DataLad
        shell: micromamba-shell {0}
        run: |
          if [[ ! -d "${TEST_DATA_HOME}" ]]; then
            datalad install -rg --source=https://gin.g-node.org/nipreps-data/tests-eddymotion.git ${TEST_DATA_HOME}
          else
            cd ${TEST_DATA_HOME}
            datalad update --merge -r .
            datalad get -r -J4 *
          fi

      - uses: actions/cache/save@v4
        with:
          path: /home/runner/eddymotion-tests/
          key: data-v0

      - name: Install editable
        shell: micromamba-shell {0}
        run: |
          pip install -e .

      - name: Run tests
        shell: micromamba-shell {0}
        run: |
          pytest --doctest-modules --cov eddymotion -n auto -x --cov-report xml \
                 --junitxml=test-results.xml -v src test
      - uses: codecov/codecov-action@v4
        if: ${{ always() }}
        with:
          files: cov.xml
          token: ${{ secrets.CODECOV_TOKEN }}
